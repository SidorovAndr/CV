/*идея с cv- префиксом не уверен что хорошая практика, дополнительное пространство имён, которое*/
/*врядли будет коллизией хоть когда-нибудь, даже в очень больших проектах*/

/*лучше использовать normalize.css один раз,*/
/*плюс не использовать селектор всех элементов вообще*/
/*слишком небольшой профит, font-family пишут один раз на body,*/
/*а сброс отступов нужен очень немногим элементам*/
* {
    margin: 0;
    padding: 0;
    font-family: sans-serif;
}

ul {
    /*по какой логике это написано если уже использовал селектор звёздочки для сбросов?
    причем эта запись вполне имеет смысл, если удалить код выше
    */
    padding: 0;
}

li {
    /*вообще идея писать стили тегам плохая, лучше писать стили классам, потому*/
    /*что придётся рефакторить такой код чаще чем хотелось бы,*/
    /*а классами ты управляешь сам какому виджету какие классы дать, невзирая на использованные теги*/
    list-style-type: none;
}


.container {
    max-width: 1000px;
    margin: 0 auto;
}

.d-flex {
    display: flex;
} 

/*мизерный профит от такой утилиты*/
.justify-content-between {
    justify-content: space-between
}


.cv-img {
    /*идея не очень, пиши лучше для изображения img тега тогда .photo {width: 250px; height: 250px;} и используй object-fit фичу*/
    max-width: 250px;
    max-height: 250px;
    min-width: 250px;
    min-height: 250px;
    border-radius: 50%;
    overflow: hidden;
    position: relative;
}

/*можно просто img дать свой собственный клас*/
.cv-img img {
    /*идея с позиционированием понятная, но много лучше заранее подготовить нужное изображение*/
    position: absolute;
    top: 60%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 300px;
}


.cv-body {
    margin-top: 100px;
}

.cv-head {
    margin-top: 100px;
}

.cv-short-item {
    margin-top: 10px;
}



.cv-short-bottom {
    margin-top: 50px;
}

.cv-main-heading {
    text-decoration: underline;
    text-decoration-color: blue;
}

.cv-education-heading {
    text-decoration: underline;
}

.cv-education {
    display: flex;
    align-items: stretch;

    /*лишнее*/
    justify-content: flex-start;
}

.cv-education-right {
    margin-left: 30px;
    padding: 10px 30px;
}

.cv-education-left {
    min-height: 200px;
    max-width: 300px;
    min-width: 300px;
    margin-bottom: 10px;
    text-align: right;
    padding: 10px 30px;
    background-color: aqua;
}

/*обычный класс .list-item будет вполне ок, лишние пространства имён*/
.cv-education-list-item {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    }

/*плохое имя класса, обычно именуют по содержимому, именовать по цвету не принято, слишком уникальные классы будут*/
.item-heading__blue {
    font-size: 18px;
    font-weight: 600;
    /*стоит использовать hex формат вместо rgb, т.е. вот так #0011FF, это стандарт*/
    color: rgb(0, 17, 255);
}
.item-heading__black {
    font-size: 17px;
    font-weight: 600;
    color: black;
}

.item-heading__black.responsibilities {
    margin-left: -20px;
}

.cv-working-list {
    margin-top: 20px;
    padding-left: 20px;
    list-style: circle;
}

.cv-working-list li {
    list-style-type: circle;
}
.mt-2 {
    margin-top: 20px;
}